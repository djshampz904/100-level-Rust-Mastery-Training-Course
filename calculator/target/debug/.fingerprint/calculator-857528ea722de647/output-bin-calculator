{"$message_type":"diagnostic","message":"no function or associated item named `from_f64` found for struct `Decimal` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"src/main.rs","byte_start":580,"byte_end":588,"line_start":25,"line_end":25,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"            Ok(num) => Decimal::from_f64(num).ok_or(\"Invalid decimal\")?,","highlight_start":33,"highlight_end":41}],"label":"function or associated item not found in `Decimal`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if you're trying to build a new `Decimal` consider using one of the following associated functions:\nDecimal::new\nDecimal::try_new\nDecimal::from_i128_with_scale\nDecimal::try_from_i128_with_scale\nand 9 others","code":null,"level":"note","spans":[{"file_name":"/home/shvmpz/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust_decimal-1.37.2/src/decimal.rs","byte_start":12159,"byte_end":12202,"line_start":407,"line_end":407,"column_start":5,"column_end":48,"is_primary":true,"text":[{"text":"    pub fn new(num: i64, scale: u32) -> Decimal {","highlight_start":5,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/shvmpz/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust_decimal-1.37.2/src/decimal.rs","byte_start":12624,"byte_end":12692,"line_start":424,"line_end":424,"column_start":5,"column_end":73,"is_primary":true,"text":[{"text":"    pub const fn try_new(num: i64, scale: u32) -> crate::Result<Decimal> {","highlight_start":5,"highlight_end":73}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/shvmpz/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust_decimal-1.37.2/src/decimal.rs","byte_start":14028,"byte_end":14089,"line_start":467,"line_end":467,"column_start":5,"column_end":66,"is_primary":true,"text":[{"text":"    pub fn from_i128_with_scale(num: i128, scale: u32) -> Decimal {","highlight_start":5,"highlight_end":66}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"/home/shvmpz/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust_decimal-1.37.2/src/decimal.rs","byte_start":14569,"byte_end":14655,"line_start":485,"line_end":485,"column_start":5,"column_end":91,"is_primary":true,"text":[{"text":"    pub const fn try_from_i128_with_scale(num: i128, scale: u32) -> crate::Result<Decimal> {","highlight_start":5,"highlight_end":91}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"items from traits can only be used if the trait is in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"trait `FromPrimitive` which provides `from_f64` is implemented but not in scope; perhaps you want to import it","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":"use rust_decimal::prelude::FromPrimitive;\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"there is an associated function `from_i64` with a similar name","code":null,"level":"help","spans":[{"file_name":"src/main.rs","byte_start":580,"byte_end":588,"line_start":25,"line_end":25,"column_start":33,"column_end":41,"is_primary":true,"text":[{"text":"            Ok(num) => Decimal::from_f64(num).ok_or(\"Invalid decimal\")?,","highlight_start":33,"highlight_end":41}],"label":null,"suggested_replacement":"from_i64","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m: no function or associated item named `from_f64` found for struct `Decimal` in the current scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0msrc/main.rs:25:33\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Ok(num) => Decimal::from_f64(num).ok_or(\"Invalid decimal\")?,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mfunction or associated item not found in `Decimal`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: if you're trying to build a new `Decimal` consider using one of the following associated functions:\u001b[0m\n\u001b[0m      Decimal::new\u001b[0m\n\u001b[0m      Decimal::try_new\u001b[0m\n\u001b[0m      Decimal::from_i128_with_scale\u001b[0m\n\u001b[0m      Decimal::try_from_i128_with_scale\u001b[0m\n\u001b[0m      and 9 others\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m--> \u001b[0m\u001b[0m/home/shvmpz/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/rust_decimal-1.37.2/src/decimal.rs:407:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m407\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn new(num: i64, scale: u32) -> Decimal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m424\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const fn try_new(num: i64, scale: u32) -> crate::Result<Decimal> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m467\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn from_i128_with_scale(num: i128, scale: u32) -> Decimal {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m485\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const fn try_from_i128_with_scale(num: i128, scale: u32) -> crate::Result<Decimal\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m= \u001b[0m\u001b[0m\u001b[1mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: trait `FromPrimitive` which provides `from_f64` is implemented but not in scope; perhaps you want to import it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m1\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[38;5;10m+ use rust_decimal::prelude::FromPrimitive;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is an associated function `from_i64` with a similar name\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m            Ok(num) => Decimal::\u001b[0m\u001b[0m\u001b[38;5;9mfrom_f64\u001b[0m\u001b[0m(num).ok_or(\"Invalid decimal\")?,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;12m25\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m            Ok(num) => Decimal::\u001b[0m\u001b[0m\u001b[38;5;10mfrom_i64\u001b[0m\u001b[0m(num).ok_or(\"Invalid decimal\")?,\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;12m|\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"aborting due to 1 previous error","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m: aborting due to 1 previous error\u001b[0m\n\n"}
{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}
